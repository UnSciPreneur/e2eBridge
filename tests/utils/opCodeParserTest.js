"use strict";

var chai = require('chai');
var sinon = require('sinon');
var expect = chai.expect;
var opCodeParser;

describe('opCodeParser', function () {
  before(function () {
    console.log('starting');
    opCodeParser = require('./../../utils/opCodeParser');
  });

  after(function () {
    console.log('finished');
  });


  it('parses code correctly', function () {
    // this is a very short synthetic example

    var opCodes = '0x606060405260e060020a60003504';

    var result = opCodeParser.parse(opCodes);

    console.log(result);

    expect(result.length).to.equal(200);

    expect(result.substring(13,18)).to.equal("PUSH1");
  });

  it('parses long input correctly', function () {
    // those are some opcodes from the contract at 0xa327075af2a223a1c83a36ada1126afe7430f955

    var opCodes = '0x6060604052361561001f5760e060020a600035046372ea4b8c811461010c575b61011b3460008080678ac7230489e8000084106101d557600180548101908190556003805433929081101561000257906000526020600020900160006101000a815481600160a060020a0302191690830217905550678ac7230489e80000840393508350678ac7230489e800006000600082828250540192505081905550600260016000505411151561011d576003';
    var parsedOpCodes = "0x0000:\t(60)\tPUSH1\t0x60\n" +
      "0x0002:\t(60)\tPUSH1\t0x40\n" +
      "0x0004:\t(52)\tMSTORE\n" +
      "0x0005:\t(36)\tCALLDATASIZE\n" +
      "0x0006:\t(15)\tISZERO\n" +
      "0x0007:\t(61)\tPUSH2\t0x001f\n" +
      "0x000a:\t(57)\tJUMPI\n" +
      "0x000b:\t(60)\tPUSH1\t0xe0\n" +
      "0x000d:\t(60)\tPUSH1\t0x02\n" +
      "0x000f:\t(0a)\tEXP\n" +
      "0x0010:\t(60)\tPUSH1\t0x00\n" +
      "0x0012:\t(35)\tCALLDATALOAD\n" +
      "0x0013:\t(04)\tDIV\n" +
      "0x0014:\t(63)\tPUSH4\t0x72ea4b8c\n" +
      "0x0019:\t(81)\tDUP2\n" +
      "0x001a:\t(14)\tEQ\n" +
      "0x001b:\t(61)\tPUSH2\t0x010c\n" +
      "0x001e:\t(57)\tJUMPI\n" +
      "0x001f:\t(5b)\tJUMPDEST\n" +
      "0x0020:\t(61)\tPUSH2\t0x011b\n" +
      "0x0023:\t(34)\tCALLVALUE\n" +
      "0x0024:\t(60)\tPUSH1\t0x00\n" +
      "0x0026:\t(80)\tDUP1\n" +
      "0x0027:\t(80)\tDUP1\n" +
      "0x0028:\t(67)\tPUSH8\t0x8ac7230489e80000\n" +
      "0x0031:\t(84)\tDUP5\n" +
      "0x0032:\t(10)\tLT\n" +
      "0x0033:\t(61)\tPUSH2\t0x01d5\n" +
      "0x0036:\t(57)\tJUMPI\n" +
      "0x0037:\t(60)\tPUSH1\t0x01\n" +
      "0x0039:\t(80)\tDUP1\n" +
      "0x003a:\t(54)\tSLOAD\n" +
      "0x003b:\t(81)\tDUP2\n" +
      "0x003c:\t(01)\tADD\n" +
      "0x003d:\t(90)\tSWAP1\n" +
      "0x003e:\t(81)\tDUP2\n" +
      "0x003f:\t(90)\tSWAP1\n" +
      "0x0040:\t(55)\tSSTORE\n" +
      "0x0041:\t(60)\tPUSH1\t0x03\n" +
      "0x0043:\t(80)\tDUP1\n" +
      "0x0044:\t(54)\tSLOAD\n" +
      "0x0045:\t(33)\tCALLER\n" +
      "0x0046:\t(92)\tSWAP3\n" +
      "0x0047:\t(90)\tSWAP1\n" +
      "0x0048:\t(81)\tDUP2\n" +
      "0x0049:\t(10)\tLT\n" +
      "0x004a:\t(15)\tISZERO\n" +
      "0x004b:\t(61)\tPUSH2\t0x0002\n" +
      "0x004e:\t(57)\tJUMPI\n" +
      "0x004f:\t(90)\tSWAP1\n" +
      "0x0050:\t(60)\tPUSH1\t0x00\n" +
      "0x0052:\t(52)\tMSTORE\n" +
      "0x0053:\t(60)\tPUSH1\t0x20\n" +
      "0x0055:\t(60)\tPUSH1\t0x00\n" +
      "0x0057:\t(20)\tSHA3\n" +
      "0x0058:\t(90)\tSWAP1\n" +
      "0x0059:\t(01)\tADD\n" +
      "0x005a:\t(60)\tPUSH1\t0x00\n" +
      "0x005c:\t(61)\tPUSH2\t0x0100\n" +
      "0x005f:\t(0a)\tEXP\n" +
      "0x0060:\t(81)\tDUP2\n" +
      "0x0061:\t(54)\tSLOAD\n" +
      "0x0062:\t(81)\tDUP2\n" +
      "0x0063:\t(60)\tPUSH1\t0x01\n" +
      "0x0065:\t(60)\tPUSH1\t0xa0\n" +
      "0x0067:\t(60)\tPUSH1\t0x02\n" +
      "0x0069:\t(0a)\tEXP\n" +
      "0x006a:\t(03)\tSUB\n" +
      "0x006b:\t(02)\tMUL\n" +
      "0x006c:\t(19)\tNOT\n" +
      "0x006d:\t(16)\tAND\n" +
      "0x006e:\t(90)\tSWAP1\n" +
      "0x006f:\t(83)\tDUP4\n" +
      "0x0070:\t(02)\tMUL\n" +
      "0x0071:\t(17)\tOR\n" +
      "0x0072:\t(90)\tSWAP1\n" +
      "0x0073:\t(55)\tSSTORE\n" +
      "0x0074:\t(50)\tPOP\n" +
      "0x0075:\t(67)\tPUSH8\t0x8ac7230489e80000\n" +
      "0x007e:\t(84)\tDUP5\n" +
      "0x007f:\t(03)\tSUB\n" +
      "0x0080:\t(93)\tSWAP4\n" +
      "0x0081:\t(50)\tPOP\n" +
      "0x0082:\t(83)\tDUP4\n" +
      "0x0083:\t(50)\tPOP\n" +
      "0x0084:\t(67)\tPUSH8\t0x8ac7230489e80000\n" +
      "0x008d:\t(60)\tPUSH1\t0x00\n" +
      "0x008f:\t(60)\tPUSH1\t0x00\n" +
      "0x0091:\t(82)\tDUP3\n" +
      "0x0092:\t(82)\tDUP3\n" +
      "0x0093:\t(82)\tDUP3\n" +
      "0x0094:\t(50)\tPOP\n" +
      "0x0095:\t(54)\tSLOAD\n" +
      "0x0096:\t(01)\tADD\n" +
      "0x0097:\t(92)\tSWAP3\n" +
      "0x0098:\t(50)\tPOP\n" +
      "0x0099:\t(50)\tPOP\n" +
      "0x009a:\t(81)\tDUP2\n" +
      "0x009b:\t(90)\tSWAP1\n" +
      "0x009c:\t(55)\tSSTORE\n" +
      "0x009d:\t(50)\tPOP\n" +
      "0x009e:\t(60)\tPUSH1\t0x02\n" +
      "0x00a0:\t(60)\tPUSH1\t0x01\n" +
      "0x00a2:\t(60)\tPUSH1\t0x00\n" +
      "0x00a4:\t(50)\tPOP\n" +
      "0x00a5:\t(54)\tSLOAD\n" +
      "0x00a6:\t(11)\tGT\n" +
      "0x00a7:\t(15)\tISZERO\n" +
      "0x00a8:\t(15)\tISZERO\n" +
      "0x00a9:\t(61)\tPUSH2\t0x011d\n" +
      "0x00ac:\t(57)\tJUMPI\n" +
      "0x00ad:\t(60)\tPUSH1\t0x03\n";

    var parsed = opCodeParser.parse(opCodes);

    expect(parsed).to.eql(parsedOpCodes);
  });

  it('parses the contract correctly', function () {
    // those are from where?

    var opCodes = '7f4e616d65526567000000000000000000000000000000000000000000000000003055307f4e616d6552656700000000000000000000000000000000000000000000000000557f436f6e666967000000000000000000000000000000000000000000000000000073661005d2720d855f1d9976f88bb10c1a3398c77f5573661005d2720d855f1d9976f88bb10c1a3398c77f7f436f6e6669670000000000000000000000000000000000000000000000000000553360455560df806100c56000396000f3007f726567697374657200000000000000000000000000000000000000000000000060003514156053576020355415603257005b335415603e5760003354555b6020353360006000a233602035556020353355005b60007f756e72656769737465720000000000000000000000000000000000000000000060003514156082575033545b1560995733335460006000a2600033545560003355005b60007f6b696c6c00000000000000000000000000000000000000000000000000000000600035141560cb575060455433145b1560d25733ff5b6000355460005260206000f3';
    opCodes = '7f726567697374657200000000000000000000000000000000000000000000000060003514156053576020355415603257005b335415603e5760003354555b6020353360006000a233602035556020353355005b60007f756e72656769737465720000000000000000000000000000000000000000000060003514156082575033545b1560995733335460006000a2600033545560003355005b60007f6b696c6c00000000000000000000000000000000000000000000000000000000600035141560cb575060455433145b1560d25733ff5b6000355460005260206000f3';

    console.log(opCodeParser.parse(opCodes));

    // ToDo: add meaningful assertions here or remove test!
  });

  it('detects the creation header correctly', function () {
    // this is deployed in transaction 0xe5da56901c48d12e17ed9bc731dcd1d7424f8423d588ec943f8ec48552683c66
    var opCodes = '0x606060405260008055600380546006808355919082908015829011604357818360005260206000209182019101604391905b80821115609a57600081556001016031565b505080543392506000908110156002579081527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b8054600160a060020a0319169092179091556001556102fe8061009f6000396000f35b50905600';

    // console.log(opCodeParser.parse(opCodes));
    console.log(opCodeParser.detect(opCodes));

    // ToDo: add meaningful assertions here or remove test!
  });

  it('parses opcodes correctly', function () {
    // this is deployed in transaction 0xe5da56901c48d12e17ed9bc731dcd1d7424f8423d588ec943f8ec48552683c66
    var opCodes = '0x606060405260008055600380546006808355919082908015829011604357818360005260206000209182019101604391905b80821115609a57600081556001016031565b505080543392506000908110156002579081527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b8054600160a060020a0319169092179091556001556102fe8061009f6000396000f35b50905600';

    // console.log(opCodeParser.parse(opCodes));
    console.log(opCodeParser.parse(opCodes));

    // ToDo: add meaningful assertions here or remove test!
  });

  it('handles contract creation correctly', function () {
    // this is the contract creation tx of https://etherscan.io/address/0x863df6bfa4469f3ead0be8f9f2aae51c91a907b4

    var opCodes = '0x6060604052341561000c57fe5b5b61170f8061001c6000396000f300';

    console.log(opCodeParser.parse(opCodes));

    // ToDo: add meaningful assertions here or remove test!
  });

  it('handles real world contracts correctly - part1', function () {
    // this is the contract at 0x07ee55aa48bb72dcc6e9d78256648910de513eca

    var opCodes = '0x6060604052361561004b5760e060020a600035046319e44e3281146100895780631d972d411461' +
      '0092578063b00606a5146100ad578063ba3ae0ce146100e5578063da95ebf71461011f575b6101dc' +
      '600160a060020a0333166060908152346080527fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d' +
      '3c460751c2402c5c5cc9109c90604090a1565b6101de60005481565b6101e8600435600160205260' +
      '00908152604090205460ff1681565b6101e860043560243560443560643560008481526002602052' +
      '60408120805482908190600160a060020a031681141561038e57610002565b6101fc600435600260' +
      '20819052600091825260409091208054600182015492820154600390920154600160a060020a0391' +
      '82169392911684565b61021260043560243560008054600190810180835560001943014018606081' +
      '81526c01000000000000000000000000600160a060020a0387169081026080908152609487905260' +
      '548320808752600260208190526040909720805473ffffffffffffffffffffffffffffffffffffff' +
      'ff19168a17815595860188905595850184905590815260a086905260c08590529192917fd0df5d45' +
      'cd50ae0aaff9013e6b3dbffdd1d9722cd6a2ecee1589e7bf64cf837591a1505092915050565b005b' +
      '6060908152602090f35b604080519115158252519081900360200190f35b60609384526080928352' +
      '60a09190915260c05290f35b604051808260001916815260200191505060405180910390f35b8260' +
      '000160009054906101000a9004600160a060020a0316600160a060020a0316600084600101600050' +
      '54604051809050600060405180830381858888f193505050509050801561037f577f94d3c694ab2f' +
      '443abe65d90aba86027f8c9ba2f44f1073bb89390c7ca0bf866a8360000160009054906101000a90' +
      '04600160a060020a031684600101600050548560030160009054906101000a9004600160a060020a' +
      '0316856040518085600160a060020a0316815260200184815260200183600160a060020a03168152' +
      '60200182600160a060020a0316815260200194505050505060405180910390a16002600050600089' +
      '60001916815260200190815260200160002060006000820160006101000a815490600160a060020a' +
      '030219169055600182016000506000905560028201600050600090556003820160006101000a8154' +
      '90600160a060020a03021916905550505b8093505b505050949350505050565b606088815260ff88' +
      '16608090815260a088905260c087905260019160e091602091908186866161da5a03f11561000257' +
      '506040805151600160a060020a038116845260209290925282205490925060ff1615156103ea5761' +
      '0002565b8260030160009054906101000a9004600160a060020a0316600160a060020a0316600014' +
      '156104af57818360030160006101000a815481600160a060020a03021916908302179055507fa0cf' +
      '8a24caec31ed7663626cd6d6ad687b5b0004a7a743af24aabc3665ae24d283600001600090549061' +
      '01000a9004600160a060020a03168460010160005054846040518084600160a060020a0316815260' +
      '200183815260200182600160a060020a03168152602001935050505060405180910390a161038356' +
      '5b81600160a060020a03168360030160009054906101000a9004600160a060020a0316600160a060' +
      '020a0316141561022c5761000256';

    console.log(opCodeParser.parse(opCodes));

    // ToDo: add meaningful assertions here or remove test!
  });


  it('handles real world contracts correctly - part 2', function () {
    // this is the contract at 0x61edcdf5bb737adffe5043706e7c5bb1f1a56eea

    var opCodes = '0x6060604052361561004b5760e060020a600035046319e44e3281146100895780631d972d411461' +
      '0092578063b00606a5146100ad578063ba3ae0ce146100e5578063da95ebf71461011f575b6101dc' +
      '600160a060020a0333166060908152346080527fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d' +
      '3c460751c2402c5c5cc9109c90604090a1565b6101de60005481565b6101de600435600160205260' +
      '00908152604090205460ff1681565b6101de60043560243560443560643560008481526002602052' +
      '60408120805482908190600160a060020a031681141561036457610002565b6101f0600435600260' +
      '20819052600091825260409091208054600182015492820154600390920154600160a060020a0391' +
      '82169392911684565b6101de60043560243560008054600190810180835560001943014018606081' +
      '81526c01000000000000000000000000600160a060020a0387169081026080908152609487905260' +
      '548320808752600260208190526040909720805473ffffffffffffffffffffffffffffffffffffff' +
      'ff19168a17815595860188905595850184905590815260a086905260c08590529192917fd0df5d45' +
      'cd50ae0aaff9013e6b3dbffdd1d9722cd6a2ecee1589e7bf64cf837591a1505092915050565b005b' +
      '60408051918252519081900360200190f35b6060938452608092835260a09190915260c05290f35b' +
      '8260000160009054906101000a9004600160a060020a0316600160a060020a031660008460010160' +
      '005054604051809050600060405180830381858888f1935050505090508015610355577f94d3c694' +
      'ab2f443abe65d90aba86027f8c9ba2f44f1073bb89390c7ca0bf866a836000016000905490610100' +
      '0a9004600160a060020a031684600101600050548560030160009054906101000a9004600160a060' +
      '020a0316856040518085600160a060020a0316815260200184815260200183600160a060020a0316' +
      '815260200182600160a060020a0316815260200194505050505060405180910390a1600260005060' +
      '0089815260200190815260200160002060006000820160006101000a815490600160a060020a0302' +
      '19169055600182016000506000905560028201600050600090556003820160006101000a81549060' +
      '0160a060020a03021916905550505b8093505b505050949350505050565b606088815260ff881660' +
      '8090815260a088905260c087905260019160e091602091908186866161da5a03f115610002575060' +
      '40805151600160a060020a038116845260209290925282205490925060ff1615156103c057610002' +
      '565b8260030160009054906101000a9004600160a060020a0316600160a060020a03166000141561' +
      '048557818360030160006101000a815481600160a060020a03021916908302179055507fa0cf8a24' +
      'caec31ed7663626cd6d6ad687b5b0004a7a743af24aabc3665ae24d2836000016000905490610100' +
      '0a9004600160a060020a03168460010160005054846040518084600160a060020a03168152602001' +
      '83815260200182600160a060020a03168152602001935050505060405180910390a1610359565b81' +
      '600160a060020a03168360030160009054906101000a9004600160a060020a0316600160a060020a' +
      '031614156102065761000256';

    console.log(opCodeParser.parse(opCodes));

    // ToDo: add meaningful assertions here or remove test!
  });


  it('handles real world contracts correctly - part 3', function () {
    // this is the contract at 0xdae5047277a2cc3d0013fc0cf4a12817b9b85c33

    var opCodes = '0x60606040526000357c010000000000000000000000000000000000000000000000000000000090' +
      '048063b19eaf1e146037576035565b005b6046600480359060200150605c565b6040518082815260' +
      '200191505060405180910390f35b60006000600290505b82818202111515608d5760008184061415' +
      '6080578091506094565b5b80806001019150506065565b8291506094565b5091905056';

    console.log(opCodeParser.parse(opCodes));

    // ToDo: add meaningful assertions here or remove test!
  });
});